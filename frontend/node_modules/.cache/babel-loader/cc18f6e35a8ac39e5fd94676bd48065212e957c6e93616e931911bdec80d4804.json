{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post('/api/users/login', credentials);\n    return response.data;\n  },\n  register: async data => {\n    const response = await api.post('/api/users/register', data);\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/api/users/me');\n    return response.data;\n  }\n};\n\n// News API\nexport const newsAPI = {\n  getNews: async params => {\n    const response = await api.get('/api/news', {\n      params\n    });\n    return response.data;\n  },\n  getCategories: async () => {\n    const response = await api.get('/api/news/categories');\n    return response.data;\n  },\n  getTrending: async () => {\n    const response = await api.get('/api/news/trending');\n    return response.data;\n  },\n  getArticle: async id => {\n    const response = await api.get(`/api/news/${id}`);\n    return response.data;\n  },\n  markAsRead: async (articleId, userId, data) => {\n    const response = await api.post(`/api/news/${articleId}/read`, {\n      user_id: userId,\n      ...data\n    });\n    return response.data;\n  },\n  refreshNews: async () => {\n    const response = await api.post('/api/news/refresh');\n    return response.data;\n  }\n};\n\n// Preferences API\nexport const preferencesAPI = {\n  getUserPreferences: async userId => {\n    const response = await api.get(`/api/preferences/${userId}`);\n    return response.data;\n  },\n  createPreference: async (userId, preference) => {\n    const response = await api.post(`/api/preferences/${userId}`, preference);\n    return response.data;\n  },\n  deletePreference: async (userId, category) => {\n    const response = await api.delete(`/api/preferences/${userId}/${category}`);\n    return response.data;\n  }\n};\n\n// Analytics API\nexport const analyticsAPI = {\n  getReadingAnalytics: async userId => {\n    const response = await api.get(`/api/analytics/${userId}/reading`);\n    return response.data;\n  },\n  getPreferenceAnalytics: async userId => {\n    const response = await api.get(`/api/analytics/${userId}/preferences`);\n    return response.data;\n  },\n  getFeedbackAnalytics: async userId => {\n    const response = await api.get(`/api/analytics/${userId}/feedback`);\n    return response.data;\n  },\n  getUserInsights: async userId => {\n    const response = await api.get(`/api/analytics/${userId}/insights`);\n    return response.data;\n  }\n};\n\n// AI API\nexport const aiAPI = {\n  getRecommendations: async data => {\n    const response = await api.post('/api/ai/recommendations', data);\n    return response.data;\n  },\n  analyzeArticle: async data => {\n    const response = await api.post('/api/ai/analyze-article', data);\n    return response.data;\n  },\n  getUserProfile: async userId => {\n    const response = await api.get(`/api/ai/user-profile/${userId}`);\n    return response.data;\n  },\n  getAlgorithms: async () => {\n    const response = await api.get('/api/ai/algorithms');\n    return response.data;\n  },\n  getAIInsights: async userId => {\n    const response = await api.get(`/api/ai/insights/${userId}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","credentials","post","data","register","getCurrentUser","get","newsAPI","getNews","params","getCategories","getTrending","getArticle","id","markAsRead","articleId","userId","user_id","refreshNews","preferencesAPI","getUserPreferences","createPreference","preference","deletePreference","category","delete","analyticsAPI","getReadingAnalytics","getPreferenceAnalytics","getFeedbackAnalytics","getUserInsights","aiAPI","getRecommendations","analyzeArticle","getUserProfile","getAlgorithms","getAIInsights"],"sources":["/Users/apple/Documents/GitHub/Personalized-news-AI/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { \n  NewsResponse, \n  Article, \n  Category, \n  UserPreference, \n  ReadingAnalytics, \n  AIInsight,\n  Recommendation,\n  LoginCredentials,\n  RegisterData,\n  AuthResponse,\n  User\n} from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: async (credentials: LoginCredentials): Promise<AuthResponse> => {\n    const response = await api.post('/api/users/login', credentials);\n    return response.data;\n  },\n\n  register: async (data: RegisterData): Promise<User> => {\n    const response = await api.post('/api/users/register', data);\n    return response.data;\n  },\n\n  getCurrentUser: async (): Promise<User> => {\n    const response = await api.get('/api/users/me');\n    return response.data;\n  },\n};\n\n// News API\nexport const newsAPI = {\n  getNews: async (params?: {\n    category?: string;\n    search?: string;\n    limit?: number;\n    user_id?: number;\n  }): Promise<NewsResponse> => {\n    const response = await api.get('/api/news', { params });\n    return response.data;\n  },\n\n  getCategories: async (): Promise<{ categories: Category[] }> => {\n    const response = await api.get('/api/news/categories');\n    return response.data;\n  },\n\n  getTrending: async (): Promise<{ articles: Article[] }> => {\n    const response = await api.get('/api/news/trending');\n    return response.data;\n  },\n\n  getArticle: async (id: number): Promise<Article> => {\n    const response = await api.get(`/api/news/${id}`);\n    return response.data;\n  },\n\n  markAsRead: async (articleId: number, userId: number, data?: {\n    read_duration?: number;\n    completed?: boolean;\n  }): Promise<{ message: string; article_id: number }> => {\n    const response = await api.post(`/api/news/${articleId}/read`, {\n      user_id: userId,\n      ...data,\n    });\n    return response.data;\n  },\n\n  refreshNews: async (): Promise<{ message: string; articles_added: number }> => {\n    const response = await api.post('/api/news/refresh');\n    return response.data;\n  },\n};\n\n// Preferences API\nexport const preferencesAPI = {\n  getUserPreferences: async (userId: number): Promise<UserPreference[]> => {\n    const response = await api.get(`/api/preferences/${userId}`);\n    return response.data;\n  },\n\n  createPreference: async (userId: number, preference: {\n    category: string;\n    weight: number;\n  }): Promise<{ message: string }> => {\n    const response = await api.post(`/api/preferences/${userId}`, preference);\n    return response.data;\n  },\n\n  deletePreference: async (userId: number, category: string): Promise<{ message: string }> => {\n    const response = await api.delete(`/api/preferences/${userId}/${category}`);\n    return response.data;\n  },\n};\n\n// Analytics API\nexport const analyticsAPI = {\n  getReadingAnalytics: async (userId: number): Promise<ReadingAnalytics> => {\n    const response = await api.get(`/api/analytics/${userId}/reading`);\n    return response.data;\n  },\n\n  getPreferenceAnalytics: async (userId: number): Promise<{\n    preferences: Array<{\n      category: string;\n      weight: number;\n      created_at: string;\n    }>;\n    total_preferences: number;\n  }> => {\n    const response = await api.get(`/api/analytics/${userId}/preferences`);\n    return response.data;\n  },\n\n  getFeedbackAnalytics: async (userId: number): Promise<{\n    total_feedback: number;\n    average_rating: number;\n    liked_articles: number;\n    disliked_articles: number;\n    rating_distribution: Record<string, number>;\n  }> => {\n    const response = await api.get(`/api/analytics/${userId}/feedback`);\n    return response.data;\n  },\n\n  getUserInsights: async (userId: number): Promise<{\n    insights: AIInsight[];\n    total_insights: number;\n    reading_analytics: ReadingAnalytics;\n  }> => {\n    const response = await api.get(`/api/analytics/${userId}/insights`);\n    return response.data;\n  },\n};\n\n// AI API\nexport const aiAPI = {\n  getRecommendations: async (data: {\n    user_id: number;\n    limit?: number;\n    algorithm?: string;\n  }): Promise<{\n    recommendations: Recommendation[];\n    algorithm: string;\n    total: number;\n  }> => {\n    const response = await api.post('/api/ai/recommendations', data);\n    return response.data;\n  },\n\n  analyzeArticle: async (data: {\n    title: string;\n    description: string;\n    content?: string;\n  }): Promise<{\n    sentiment_score: number;\n    keywords: string[];\n    reading_time: number;\n    category: string;\n    sentiment_label: string;\n  }> => {\n    const response = await api.post('/api/ai/analyze-article', data);\n    return response.data;\n  },\n\n  getUserProfile: async (userId: number): Promise<{\n    user_id: number;\n    preferences: Record<string, number>;\n    categories_read: Record<string, number>;\n    sources_read: Record<string, number>;\n    sentiment_preference: number;\n    avg_reading_time: number;\n    liked_keywords: string[];\n    total_articles_read: number;\n    profile_strength: number;\n  }> => {\n    const response = await api.get(`/api/ai/user-profile/${userId}`);\n    return response.data;\n  },\n\n  getAlgorithms: async (): Promise<{\n    algorithms: Array<{\n      id: string;\n      name: string;\n      description: string;\n      strengths: string[];\n      weaknesses: string[];\n    }>;\n  }> => {\n    const response = await api.get('/api/ai/algorithms');\n    return response.data;\n  },\n\n  getAIInsights: async (userId: number): Promise<{\n    insights: AIInsight[];\n    total_insights: number;\n    profile_strength: number;\n  }> => {\n    const response = await api.get(`/api/ai/insights/${userId}`);\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}