{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/Personalized-news-AI/frontend/src/hooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      const userData = localStorage.getItem('user');\n      if (token && userData) {\n        try {\n          const currentUser = await authAPI.getCurrentUser();\n          setUser(currentUser);\n        } catch (error) {\n          console.error('Failed to get current user:', error);\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      setUser(response.user);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const register = async (email, username, password) => {\n    try {\n      await authAPI.register({\n        email,\n        username,\n        password\n      });\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","authAPI","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initializeAuth","token","localStorage","getItem","userData","currentUser","getCurrentUser","error","console","removeItem","login","email","password","response","setItem","access_token","JSON","stringify","register","username","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/GitHub/Personalized-news-AI/frontend/src/hooks/useAuth.tsx"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\nimport { User } from '../types';\nimport { authAPI } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, username: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      const userData = localStorage.getItem('user');\n\n      if (token && userData) {\n        try {\n          const currentUser = await authAPI.getCurrentUser();\n          setUser(currentUser);\n        } catch (error) {\n          console.error('Failed to get current user:', error);\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authAPI.login({ email, password });\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      setUser(response.user);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  const register = async (email: string, username: string, password: string) => {\n    try {\n      await authAPI.register({ email, username, password });\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}